UnlitTwoTexture
{
	"$nocull" "1"
	"$nodecal" "1"
//	"$additive" "1"
	"$no_fullbright" 1
	"$model" "1"
	"$nofog" "1"
	"$allowoverbright" "1"
	"$translucent" "1"

	"$basetexture" "models\weapons\attachments\holo_reflex_reticle_front_col"
	"$Texture2" "dev\noise_post"
	"$color" "[1 1 1]"
	"$color2" "[2 5 5]"

	"$t2offset" 0
	"$t2scale" 3
	"$t2rot" 0
	"$scroll" "[0 1]"

/////////////////////////////////////////////////////////

	"$valuezero"	"0"

	"$colorblind_color"		"[1 1 1]"

	"$clroffsetzero"	"[2 5 5]"			//Base colour

	$Translatescale "2.0"		//main scalar
	$TranslatescaleX "2.0"		//x scalar
	$TranslatescaleY "2.0"		//y scalar
	$holoScale "[1.5 1.5]"		// Base scaling var [inverted!]
	$holoOffset "[0.0 0.0]"		// Base Offset var

	$holoOffsetX ".0"			//dummy for print
	$holoOffsetY ".0"			//dummy for print
	$holoOffsetX_temp ".0"		//dummy for print
	$holoOffsetY_temp ".0"		//dummy for print

	$holoOffset2 "[0.0 0.0]"	//Final Offset var

	$holoOffset_temp 	"[0.0 0.0]"		// dummy Offset var
	$holoOffset2_temp 	"[0.0 0.0]"		// dummy Offset var
	$offset_disable		"0"				//offset killswitch

	"$scale_temp"	"1.2" 		//"1.2" //dummy for cvar scaling =$holoscale
	"$scale_post"	"1.0" //.0		//temp var for cvar scaling
	"$scale_result"	".0"		//temp var because we can't

	"Proxies"
	{
		//Horizontal movement speed
		"UniformNoise"
		{
			"minVal" 0.5
			"maxVal" 1
			"resultVar" "$scroll[0]"
		}
		//Vertical movement speed
		"UniformNoise"
		{
			"minVal" 0.5
			"maxVal" 1
			"resultVar" "$scroll[1]"
		}
		//Move the 2nd texture using horiz and vert speed
		"TextureTransform"
		{
			"translateVar" "$scroll"
			"scaleVar" "$t2scale"
			"rotateVar" "$t2rot"
			"resultvar" "$texture2transform"
		}
		//chevron flicker
		"UniformNoise"
		{
			"minVal" 0.8
			"maxVal" 1.00
			"resultVar" "$color"
		}

		"HoloSight"
		{
			resultVar $alpha
		}

//OFFSET/SCALE

		// Function that controls $holoOffset scalar
		EntityScript
		{
			scriptFuncName	"VMTCallback_FOVReticleOffset"
			resultVar $translatescale
		}


//Convar Based Scale manipulation
//
		//Holo Scalar X
		Multiply
		{
			srcVar1		$scale_temp
			srcVar2		$scale_post
			resultVar	"$holoScale[0]"
		}
		//Holo Scalar Y
		Multiply
		{
			srcVar1		$scale_temp
			srcVar2		$scale_post
			resultVar	"$holoScale[1]"
		}

		//EntityScript
		//{
		//	scriptFuncName	"VMTCallback_HoloSightOffset_RSPN101_Rear"
		//	resultVar $holoOffset
		//}

		"HoloSightOffset"
		{
			attachmentName		"HOLO_FRONT"
			horizontalScalar	"0.5"
			verticalScalar		"-0.5"
			resultVar			$holoOffset
		}

//Convar Based position manipulation
//
		
		// Print $holooffset value for later use
		Clamp	//X axis
		{
			srcVar1		$valuezero
			min			"$holoOffset[0]"
			max			"$holoOffset[0]"
			resultVar	$holoOffsetX
		}
		
		Clamp	//Y axis
		{
			srcVar1		$valuezero
			min			"$holoOffset[1]"
			max			"$holoOffset[1]"
			resultVar	$holoOffsetY
		}
		//Additional multiplication for scale+offset integration
		Equals
		{
			srcVar1			$holoOffsetX
			resultVar		$holoOffsetX_temp
		}
		Equals 
		{
			srcVar1			$holoOffsetY
			resultVar		$holoOffsetY_temp
		}
		multiply	//scale+offset X axis
		{
			srcVar1		$holoOffsetX_temp
			srcVar2		$scale_post
			resultVar	$holoOffsetX
		}
		multiply	//scale+offset Y axis
		{
			srcVar1		$holoOffsetY_temp
			srcVar2		$scale_post
			resultVar	$holoOffsetY
		}
		// additional offset scalar set by convar
		multiply	//X axis
		{
			srcVar1		$holoOffsetX
			srcVar2		"$translatescale"
			resultVar	"$holoOffset2[0]"
		}
		multiply	//Y axis
		{
			srcVar1		$holoOffsetY
			srcVar2		"$translatescale"
			resultVar	"$holoOffset2[1]"
		}

		// Final transform
		"TextureTransform"
		{
			"scaleVar"		"$holoScale"
			"translateVar"	"$holoOffset2"
			"resultvar"		"$basetexturetransform"
		}
	}
}